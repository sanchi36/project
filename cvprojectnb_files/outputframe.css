body {
  background: white;
  color: hsl(0, 0%, 13%);
  font-family: 'Roboto', 'Noto', sans-serif;
  font-size: 14px;
  line-height: 1.24;
  font-weight: 400;
  /* Use 2px on the bottom to allow glyphs that render below the baseline to be
   * fully visible (such as the _ character).
   *
   * IMPORTANT: The padding-bottom value must be kept in sync with the
   * hard-coded value in the outputframe sizing code in
   * http://google3/research/colab/frontend/common/output/sizing.js.
   */
  padding: 7px 0 10px 5px;
  margin: 0;
}

h1, h2, h3, h4, h5, h6 {
  color: hsl(0, 0%, 13%);
  font-family: 'Roboto', 'Noto', sans-serif;
  font-weight: 700;
  margin-bottom: 4px;
}

p, ul {
  margin-bottom: 6px;
  margin-top: 6px;
}

pre {
  margin-bottom: 0px;
  margin-top: 0px;
}

/**
 * Correct line-wrapping behavior for divs. Unfortunately, many existing
 * notebooks rely on our output DOM structure which uses divs, so
 * we can't easily switch to span.
 */
pre, div.stream, div.pyout, div.output_text {
  display: inline;
}

/* Style of the tables and their cells. */
table.dataframe {
  border-collapse: collapse;
  border-spacing: 0;
  border: none;
  table-layout: fixed;
}

table.dataframe thead {
  border-bottom: 1px solid #ccc;
  font-family: monospace;
  text-align: right;
}

table.dataframe tr, table.dataframe th, table.dataframe td {
  border: none;
  padding: 0.5em;
  white-space: normal;
}

table.dataframe th {
  font-weight: bold;
}
table.dataframe th.col_heading {
  text-align: right;
}
table.dataframe tbody tr:nth-child(odd) {
  background: #f5f5f5;
}

table.dataframe tbody tr:hover,
table.dataframe tbody tr:nth-child(odd):hover {
  background-color: #eaf2fd;
}

table.dataframe td {
  text-align: right;
}

/* for interactive tables */
table.dataTable input.text_filter {
  width: 95%;
}

/* Left align all headers to match up with text alignment in columns. */
table.dataTable th {
  text-align: left;
}

/* Remove layout rounding errors due to line-heights. */
.output_image>img {
  vertical-align: bottom;
}

/** CSS values for displaying IPython text. Used in
 *  displaying output of the code cell (e.g., errors).
 */

.ansibold {font-weight: bold;}

/* use dark versions for foreground, to improve visibility */
.ansiblack {color: black;}
.ansired {color: darkred;}
.ansigreen {color: darkgreen;}
.ansiyellow {color: brown;}
.ansiblue {color: darkblue;}
.ansipurple {color: darkviolet;}
.ansicyan {color: steelblue;}
.ansigray {color: gray;}

/* and light for background, for the same reason */
.ansibgblack {background-color: black;}
.ansibgred {background-color: red;}
.ansibggreen {background-color: green;}
.ansibgyellow {background-color: yellow;}
.ansibgblue {background-color: blue;}
.ansibgpurple {background-color: magenta;}
.ansibgcyan {background-color: cyan;}
.ansibggray {background-color: gray;}

/* Drop bold from output errors, which are specifying bold via ansi codes. */
.output-error span {
  /* ANSI handling defines inline styles since it also handles dynamic color
   * commands. Use important to override.
   */
  font-weight: normal !important;
}

input.raw_input {
  font-family: 'monospace';
  width: 90%;
}

/* Act as a flow-root so the height is sized to contain child elements.
 * This is a workaround for the CSS clearfix issue.
 */
#output-area {
  display: flow-root;
}

#output-area .output-error button {
  background-color: #F5F5F5;
  border: 0;
  box-shadow: 0px 2px 4px #888;
  color: rgb(51, 51, 51);
  font-family: 'Roboto', 'Noto', sans-serif;
  font-size: 11px;
  margin: 0px 4px;
  padding: 6px;
  text-transform: uppercase;
  user-select: none;
}

#output-area .output-error button:hover {
  background-color: #E0E0E0;
  cursor: pointer;
}

#output-area .output-error button.error-details {
  /* paper-blue-400 */
  background-color: #42A5F5;
  color: white;
}

#output-area .output-error button.error-details:hover {
  /* paper-blue-500 */
  background-color: #2196F3;
}

#output-area .stdin-widget {
  align-items: center;
  display: inline;
  font-family: monospace;
  margin-right: 10px;
  margin-top: 10px;
  min-width: 250px;
  padding: 1px;
}

#output-area .stdin-widget-hidden {
  visibility: hidden;
}
